# -*- coding: utf-8 -*-
"""Untitled10.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1OMJH5Ox32W68UkVy8fkMErXu8joCHTRF
"""

#This function checks for any null values and displays the percent of null values present in a column. If the 

import pandas as pd 

def checker(df, *args, **kwargs:str):
    if (df.isna().sum().sum() > 0):
        missing_df = df.isnull().sum().sort_values(ascending=False)
        total = missing_df[missing_df > 0]
    
        total_percentage = df.isnull().mean().sort_values(ascending=False)
        percent = total_percentage[total_percentage > 0] 

        #
        missing_output = pd.concat([total,percent], axis=1, keys=['Total Null Values', 'Percentage of Null'])
        print (missing_output)
        
        #deleting the missing colums? ask the user 
        for key, value in kwargs.items():
            if (key == 'delete' and value == "yes"):
                df.dropna(inplace=True)
                df.reset_index(drop=True, inplace=True)
                print ("\nNull values have been deleted")
    else:
        print ("Null values not found")
#add try-catch in this function for inputs in the parameters 



from statistics import pvariance, pstdev, variance, stdev, mode 
def statResult(df):
  numbers = df['Base Income']
  print('Population Variance:', pvariance(numbers))
  print('Population Standard Deviation:', pstdev(numbers))
  print('Sample Variance:', variance(numbers))
  print('Sample Standard Deviation:', stdev(numbers))
  print('Mode:', mode(numbers))
  
import sys
def exceptBlock():
  print("Exception Occurred")
  print(sys.exc_info())